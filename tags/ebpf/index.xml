<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ebpf on The Katz Experiments</title><link>https://www.rkatz.xyz/tags/ebpf/</link><description>Recent content in ebpf on The Katz Experiments</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 01 Nov 2020 22:45:19 -0300</lastBuildDate><atom:link href="https://www.rkatz.xyz/tags/ebpf/index.xml" rel="self" type="application/rss+xml"/><item><title>The mix (and mess) of Packet Filter in Linux Part 2 - eBPF + XDP</title><link>https://www.rkatz.xyz/post/2020-11-01-the-mix-of-packet-filter-ebpf-xdp/</link><pubDate>Sun, 01 Nov 2020 22:45:19 -0300</pubDate><guid>https://www.rkatz.xyz/post/2020-11-01-the-mix-of-packet-filter-ebpf-xdp/</guid><description>Introduction In the first part of this article, I’ve shown the most common (so far) methods of doing packet filtering in Linux.
This part of the article is all dedicated to cover a brief introduction of eBPF and XDP, being used to packet filtering. I’ll not cover the usage of eBPF to monitor resources and performance, but there’s plenty of materials available and I’ll put some at the end of this article.</description></item><item><title>The mix (and mess) of Packet Filter Linux - Part 1</title><link>https://www.rkatz.xyz/post/2020-09-13-the-mix-of-packet-filter-linux-part1/</link><pubDate>Sun, 13 Sep 2020 22:13:56 -0300</pubDate><guid>https://www.rkatz.xyz/post/2020-09-13-the-mix-of-packet-filter-linux-part1/</guid><description>Introduction So you’ve got a brand new Linux distribution. You start your Kubernetes distributions, and decide for a specific CNI that provides network policies.
Then you figure out that something is (or is not) working, does an iptables -L to check what is going on and boom: where are all my iptables rules? Worst of all, you put some newer rules but they seem not to work and your traffic is still being blocked.</description></item></channel></rss>